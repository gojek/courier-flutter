"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[777],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=s(n),f=i,m=p["".concat(u,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(m,a(a({ref:t},l),{},{components:n})):r.createElement(m,a({ref:t},l))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c[p]="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7340:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const o={},a=void 0,c={unversionedId:"MQTT Chuck",id:"MQTT Chuck",title:"MQTT Chuck",description:"MQTT Chuck can be used to inspects all the outgoing or incoming packets for an underlying Courier MQTT connection. It intercepts all the packets, persisting them and providing a UI for accessing all the MQTT packets sent or received. It also provides multiple other features like search, share, and clear data.",source:"@site/docs/MQTT Chuck.md",sourceDirName:".",slug:"/MQTT Chuck",permalink:"/courier-flutter/docs/MQTT Chuck",draft:!1,editUrl:"https://github.com/gojek/courier-flutter/edit/main/docs/docs/MQTT Chuck.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Event Handling",permalink:"/courier-flutter/docs/Event Handling"},next:{title:"Courier Flutter - Contribution Guidelines",permalink:"/courier-flutter/docs/CONTRIBUTION"}},u={},s=[],l={toc:s},p="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"MQTT Chuck can be used to inspects all the outgoing or incoming packets for an underlying Courier MQTT connection. It intercepts all the packets, persisting them and providing a UI for accessing all the MQTT packets sent or received. It also provides multiple other features like search, share, and clear data."),(0,i.kt)("h1",{id:"android-mqtt-chuck"},"Android MQTT Chuck"),(0,i.kt)("p",null,"Uses the native Android Notification and launchable Activity Intent from the notification banner. You need to pass ",(0,i.kt)("inlineCode",{parentName:"p"},"enableMQTTChuck")," flag as ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"CourierConfiguration")," when initializing ",(0,i.kt)("inlineCode",{parentName:"p"},"CourierClient")," instance. Make sure you also request permission notification and it is granted by the user."),(0,i.kt)("p",{align:"center"},(0,i.kt)("img",{src:"https://user-images.githubusercontent.com/6789991/238231835-9a9745a4-960a-4811-962a-42f4d01a7057.png"})),(0,i.kt)("h1",{id:"ios-mqtt-chuck"},"iOS MQTT Chuck"),(0,i.kt)("p",null,"Uses embedded flutter host native view, it uses SwiftUI under the hood and require minimum version of iOS 15. You can simply import ",(0,i.kt)("inlineCode",{parentName:"p"},"MQTTChuckView")," and use it in your Flutter App."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:courier_dart_sdk/chuck/mqtt_chuck_view.dart';\n//...\n\nNavigator.push(\n    context,\n    MaterialPageRoute(builder: (context) => const MQTTChuckView()),\n);\n")),(0,i.kt)("p",{align:"center"},(0,i.kt)("img",{src:"https://user-images.githubusercontent.com/6789991/238231869-cf11a711-99b5-4437-a5e9-af21ef95b4a6.png"})))}d.isMDXComponent=!0}}]);